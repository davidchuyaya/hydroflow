---
source: hydro_test/src/cluster/simple_kv_bench.rs
expression: "preview.dfir_for(&kv).to_mermaid(&WriteConfig\n{\n    no_subgraphs: true, no_pull_push: true, no_handoffs: true,\n    op_text_no_imports: true, ..WriteConfig::default()\n})"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1["<div style=text-align:center>(1v1)</div> <code><br>source_stream(DUMMY_SOURCE)</code>"]:::otherClass
2v1["<div style=text-align:center>(2v1)</div> <code><br>map(|res| {<br>    let (id, b) = res.unwrap();<br>    (<br>        hydro_lang::ClusterId::&lt;<br>            hydro_test::__staged::cluster::simple_kv_bench::Client,<br>        &gt;::from_raw(id),<br>        hydro_lang::runtime_support::bincode::deserialize::&lt;(u32, u32)&gt;(&amp;b).unwrap(),<br>    )<br>})</code>"]:::otherClass
3v1["<div style=text-align:center>(3v1)</div> <code><br>tee()</code>"]:::otherClass
4v1["<div style=text-align:center>(4v1)</div> <code><br>map({<br>    |(client_id, (k, v))| (k, (client_id, v))<br>})</code>"]:::otherClass
5v1["<div style=text-align:center>(5v1)</div> <code><br>reduce_keyed::&lt;<br>    'static,<br>&gt;({<br>    |prev, new| {<br>        *prev = new;<br>    }<br>})</code>"]:::otherClass
6v1["<div style=text-align:center>(6v1)</div> <code><br>for_each({<br>    |_| {}<br>})</code>"]:::otherClass
7v1["<div style=text-align:center>(7v1)</div> <code><br>map(|(id, data)| {<br>    (<br>        id.raw_id,<br>        hydro_lang::runtime_support::bincode::serialize(&amp;data).unwrap().into(),<br>    )<br>})</code>"]:::otherClass
8v1["<div style=text-align:center>(8v1)</div> <code><br>dest_sink(DUMMY_SINK)</code>"]:::otherClass
1v1-->2v1
2v1-->3v1
3v1-->4v1
4v1--x5v1; linkStyle 3 stroke:red
5v1-->6v1
7v1-->8v1
3v1-->7v1
6v1
7v1
8v1
subgraph var_stream_1 ["var <tt>stream_1</tt>"]
    style var_stream_1 fill:transparent
    1v1
    2v1
end
subgraph var_stream_2 ["var <tt>stream_2</tt>"]
    style var_stream_2 fill:transparent
    3v1
end
subgraph var_stream_3 ["var <tt>stream_3</tt>"]
    style var_stream_3 fill:transparent
    4v1
end
subgraph var_stream_4 ["var <tt>stream_4</tt>"]
    style var_stream_4 fill:transparent
    5v1
end
